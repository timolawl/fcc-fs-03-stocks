{"version":3,"sources":["../../../node_modules/browser-pack/_prelude.js","post.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","createChart","seriesOptions","Highcharts","stockChart","document","querySelector","rangeSelector","selected","yAxis","labels","formatter","this","value","plotLines","width","color","plotOptions","series","compare","showInNavigator","tooltip","pointFormat","valueDecimals","split","checkLastUpdate","date","sameDate","lastUpdated","Date","now","getUTCDate","getUTCMonth","getUTCFullYear","generateStockUIElement","stockName","companyName","index","highchartColors","getOptions","colors","newRow","createElement","classList","add","appendChild","stockWrapper","className","lastChild","stock","style","border","setAttribute","ticker","textContent","company","remove","srClose","close","innerHTML","addEventListener","socket","emit","target","parentNode","removeChild","io","jQuery","ajaxPrefilter","options","crossDomain","support","cors","url","window","onload","on","data","display","preventDefault","toUpperCase","stocksNode","firstChild","seriesCounter","names","stockTickers","to","from","setMonth","getMonth","urlFromSegment","urlToSegment","historicalURLs","map","stockTicker","nameURLs","toLowerCase","forEach","name","sessionStorage","getItem","JSON","parse","sessionStoredStock","today","sessionData","days","promise1","$","get","then","ResultSet","Result","promise2","sort","row","items","parseFloat","toFixed","filter","Promise","all","console","log","setItem","stringify"],"mappings":"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","file":"post.bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n// socket io -- the cdnjs script is in the HTML template above this script file\nvar socket = io();\n\n// https://www.npmjs.com/package/cors-anywhere\njQuery.ajaxPrefilter(function(options) {\n    if (options.crossDomain && jQuery.support.cors) {\n        options.url = 'https://cors-anywhere.herokuapp.com/' + options.url;\n    }\n});\n\nwindow.onload = function () {\n\n  socket.on('error message', function (data) {\n    if (data.display) {\n      document.querySelector('.error-message').classList.remove('visibility--hide');\n    }\n    else document.querySelector('.error-message').classList.add('visibility--hide');\n  });\n\n  // initialize chart here\n  socket.emit('request tickers', {});\n  \n\n  // any update to the trackers will trigger a repaint\n  socket.on('update processed', function (data) {\n    socket.emit('request tickers', {});\n  });\n\n  // add stock\n  document.querySelector('.btn--submit').addEventListener('click', e => {\n    e.preventDefault(); // this is why the form submission goes through anyway even with the pattern field\n    if (document.querySelector('.form__input--add').value) { \n      // may want to sanitize this before passing it along\n      socket.emit('add ticker', { ticker: document.querySelector('.form__input--add').value.toUpperCase() });\n      // clear the input field\n      document.querySelector('.form__input--add').value = '';\n    }\n  });\n  \n  // remove stock\n  document.querySelector('.btn--remove').addEventListener('click', e => {\n    e.preventDefault();\n    if (document.querySelector('.form__input--remove').value) {\n      socket.emit('remove ticker', { ticker: document.querySelector('.form__input--remove').value.toUpperCase() });\n      // clear the input field\n      document.querySelector('.form__input--remove').value = '';\n    }\n  });\n\n  // load current stocks and have it painted in highstocks/highchart\n  // have this triggered on first load to load the first painting of highcharts\n  // and for subsequent paintings, just retrigger this socket event with updated data\n  socket.on('repaint', function (data) {\n\n    // remove all old elements:\n    let stocksNode = document.querySelector('.stocks');\n    while(stocksNode.firstChild) {\n      stocksNode.removeChild(stocksNode.firstChild);\n    }\n\n    // seems horribly inefficient to redo all the AJAX calls, redraws/repaints after each addition/subtraction of a stock ticker, but this seems the price to pay for not saving the stock data beyond the name to the db.\n    // it is possible to use local storage to save the previous data and retrieve it there instead of making repeated AJAX calls\n    \n    // storing retrieved data in session storage:\n\n    // following the highcharts example:\n    let seriesOptions = [],\n        seriesCounter = 0,\n        names = data.stockTickers;\n\n    let to = new Date();\n    let from = new Date(to);\n  \n    from.setMonth(to.getMonth() - 12);\n\n    let urlFromSegment = `&a=${from.getUTCMonth()}&b=${from.getUTCDate()}&c=${from.getUTCFullYear()}`;\n    let urlToSegment = `&a=${to.getUTCMonth()}&b=${to.getUTCDate()}&c=${to.getUTCFullYear()}`;\n\n    let historicalURLs = names.map(stockTicker =>\n      `http://real-chart.finance.yahoo.com/table.csv?s=${stockTicker}${urlFromSegment}${urlToSegment}`);\n\n\n  //    let companyNameURL = 'http://autoc.finance.yahoo.com/autoc?query=mcd&region=1&lang=en';\n\n    let nameURLs = names.map(stockTicker => \n      `http://autoc.finance.yahoo.com/autoc?query=${stockTicker.toLowerCase()}&region=1&lang=en`);\n\n    names.forEach((name, index) => {\n      // check if these items are in session storage, and if the dates match.\n      // if so, retrieve from session storage:\n      if (sessionStorage.getItem(name) && checkLastUpdate((JSON.parse(sessionStorage.getItem(name))).lastUpdated)) {\n        let sessionStoredStock = JSON.parse(sessionStorage.getItem(name));\n        seriesOptions[index] = {\n          name: name,\n          data: sessionStoredStock.data\n        };\n        seriesCounter += 1;\n\n        generateStockUIElement(name, sessionStoredStock.company, index);\n\n        if (seriesCounter === names.length) {\n          // actual repaint\n          createChart(seriesOptions);\n        }\n\n      }\n      // otherwise, ajax the data\n      else {\n        let companyName = '';\n        let today = new Date();\n        let sessionData, days;\n\n        // grab the full name of the company\n        let promise1 = $.get(nameURLs[index])\n        .then(function (data) {\n          companyName = data.ResultSet.Result[0].name;\n          generateStockUIElement(name, companyName, index)\n        });\n\n\n        let promise2 = \n          // grab historical stock data of the company\n          $.get(historicalURLs[index], function (data) {\n            let relevantData = data.split(/\\r\\n|\\n/).sort().map(row => {\n              let items = row.split(',');\n              // date and stock closing value\n              return [Date.parse(items[0]), parseFloat((+items[4]).toFixed(2))]; \n            });\n            \n            days = relevantData.filter((row, i) => {\n              return row[0] && i !== 0; // remove title rows and non-content rows\n            });\n          });\n\n\n        Promise.all([promise1, promise2])\n          .then(() => {\n            // will also need to save the date too and if the time difference is less than a day,\n            // do not try to grab data again?\n            sessionData = { stock: name, company: companyName, data: days, lastUpdated: today };\n            console.log('session data for: ' + name + ' ' + companyName);\n            console.log(sessionData);\n\n            sessionStorage.setItem(name, JSON.stringify(sessionData));\n\n            seriesOptions[index] = {\n              name: name,\n              data: days\n            };\n\n            seriesCounter += 1;\n\n            if (seriesCounter === names.length) {\n                // actual repaint\n                createChart(seriesOptions);\n              }\n          });\n      }\n    });    \n  });\n};\n\n// http://www.highcharts.com/stock/demo/compare\nfunction createChart (seriesOptions) {\n  Highcharts.stockChart(document.querySelector('.chart'), {\n    rangeSelector: {\n      selected: 4\n    },\n    yAxis: {\n      labels: {\n        formatter: function () {\n          return (this.value > 0 ? ' + ' : '') + this.value + '%';\n        }\n      },\n      plotLines: [{\n        value: 0,\n        width: 2,\n        color: 'silver'\n      }]\n    },\n\n    plotOptions: {\n      series: {\n        compare: 'percent',\n        showInNavigator: true\n      }\n    },\n\n    tooltip: {\n      pointFormat: '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b> ({point.change}%)<br/>',\n      valueDecimals: 2,\n      split: true\n    },\n    series: seriesOptions\n  });\n}\n\nfunction checkLastUpdate (date) {\n  let sameDate = false;\n  let lastUpdated = new Date(date);\n  let now = new Date();\n  if (lastUpdated.getUTCDate() === now.getUTCDate() && lastUpdated.getUTCMonth() === now.getUTCMonth() && lastUpdated.getUTCFullYear() === now.getUTCFullYear()) {\n    sameDate = true;\n  }\n  return sameDate;\n}\n\nfunction generateStockUIElement (stockName, companyName, index) {\n\n  let highchartColors = Highcharts.getOptions().colors;\n\n  if (index % 2 === 0) {\n    let newRow = document.createElement('div');\n    newRow.classList.add('row');\n    document.querySelector('.stocks').appendChild(newRow);\n  }\n\n  let stockWrapper = document.createElement('div');\n  stockWrapper.className = 'wrapper--stock medium-6 large-6 columns';\n  document.querySelector('.stocks').lastChild.appendChild(stockWrapper);\n\n  let stock = document.createElement('div');\n  stock.className = 'stock';\n  stock.style.border = '1px solid ' + highchartColors[index];\n  stock.setAttribute('data-border-color', highchartColors[index]);\n  stockWrapper.appendChild(stock);\n  let ticker = document.createElement('div');\n  ticker.classList.add('stock__ticker');\n  ticker.textContent = stockName;\n  stock.appendChild(ticker);\n  let company = document.createElement('div');\n  company.classList.add('stock__company-name');\n  company.textContent = companyName;\n  stock.appendChild(company);\n  \n  let remove = document.createElement('button');\n  remove.className = 'hollow button alert stock__remove';\n  remove.setAttribute('type', 'button');\n  stock.appendChild(remove);\n  let srClose = document.createElement('span');\n  srClose.classList.add('show-for-sr');\n  srClose.textContent = 'Close';\n  remove.appendChild(srClose);\n  let close = document.createElement('span');\n  close.classList.add('stock__remove--icon');\n  close.setAttribute('aria-hidden', 'true');\n  close.innerHTML = '&times;';\n  remove.appendChild(close);\n\n  remove.addEventListener('click', e => {\n    socket.emit('remove ticker', { ticker: stockName });\n    e.target.parentNode.parentNode.removeChild(e.target.parentNode);\n  });\n\n\n}\n"]}